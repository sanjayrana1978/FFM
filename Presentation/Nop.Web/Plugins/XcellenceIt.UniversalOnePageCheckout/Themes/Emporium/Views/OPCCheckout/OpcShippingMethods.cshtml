@model CheckoutShippingMethodModel
@using Nop.Web.Models.Checkout;
@using Nop.Web.Framework.Infrastructure
@using Nop.Web.Framework.UI
@using Nop.Core

<div class="checkout-data">
    <div class="section shipping-method">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpCheckoutShippingMethodTop })
        @if (Model.Warnings.Count == 0)
        {
            <ul class="method-list">
                @for (var i = 0; i < Model.ShippingMethods.Count; i++)
                {
                    var shippingMethod = Model.ShippingMethods[i];
                    <li>
                        <label for="shippingoption_@(i)" class="checkout-method">
                            <span class="method-name">
                                <input id="shippingoption_@(i)" type="radio" name="shippingoption" value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)" checked="@shippingMethod.Selected" />
                                <label for="shippingoption_@(i)">@T("Checkout.SelectShippingMethod.MethodAndFee", shippingMethod.Name, shippingMethod.Fee)</label>
                            </span>
                            @if (!string.IsNullOrEmpty(shippingMethod.Description))
                            {
                                <span class="method-description">
                                    @Html.Raw(shippingMethod.Description)
                                </span>
                            }
                        </label>
                    </li>
                }
            </ul>
            if (Model.NotifyCustomerAboutShippingFromMultipleLocations)
            {
                <div class="multiple-locations">
                    @T("Checkout.ShippingMethod.ShippingFromMultipleLocations")
                </div>
            }
        }
        else
        {
            <div class="message-error">
                <ul>
                    @foreach (var warning in Model.Warnings)
                    {
                        <li>@warning</li>
                    }
                </ul>
            </div>
        }
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OpCheckoutShippingMethodBottom })
    </div>
</div>
