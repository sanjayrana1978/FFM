@model ProductSpecificationModel

@using Nop.Core.Domain.Catalog;

@if (Model.Groups.SelectMany(g => g.Attributes).ToList().Count > 0)
{
    <div class="product-specs-box">
        <div class="title">
            <span>@T("Products.Specs.Title")</span>
        </div>
        <div class="table-wrapper">
            <div class="data-table">
                @foreach (var group in Model.Groups)
                {
                    @if (group.Attributes.Count > 0)
                    {
                        @if (group.Id > 0)
                        {
                            @*<div class="spec-header">
                                <div class="spec-group-name" colspan="2">
                                    @group.Name
                                </div>
                            </div>*@
                        }
                        @for (int i = 0; i < group.Attributes.Count; i++)
                        {
                            var attr = group.Attributes[i];

                            <div @(i % 2 == 0 ? Html.Raw(" class=\"spec-name odd\"") : Html.Raw(" class=\"spec-name even\""))>
                                @if (attr.CustomProperties.TryGetValue("PictureUrl", out var producturl))
                                {
                                    <div class="product-picture">
                                        <img src="@(producturl)" alt="picture" />
                                    </div>
                                }
                                <span>@attr.Name</span>
                                @*<div class="spec-value">
                                    @for (int j = 0; j < attr.Values.Count; j++)
                                    {
                                        var value = attr.Values[j];

                                        @if (!string.IsNullOrEmpty(value.ColorSquaresRgb) && (value.AttributeTypeId == (int)SpecificationAttributeType.Option))
                                        {
                                            <div class="attribute-squares color-squares attribute-squares-padding">
                                                <span class="attribute-square-container" title="@Html.Raw(value.ValueRaw)">
                                                    <span class="attribute-square" style="background-color: @(value.ColorSquaresRgb);">&nbsp;</span>
                                                </span>
                                            </div>
                                        }
                                        else
                                        {
                                            @Html.Raw(value.ValueRaw)
                                            if (j != attr.Values.Count - 1)
                                            {
                                                <text>,&nbsp;</text>
                                            }
                                        }
                                    }
                                </div>*@
                            </div>
                        }
                    }
                }
            </div>
        </div>
    </div>
}